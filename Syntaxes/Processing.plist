<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>Note that everything is scoped to source.java.processing. This grammar is based on the Java grammar (https://github.com/textmate/java.tmbundle)</string>
	<key>fileTypes</key>
	<array>
		<string>pde</string>
	</array>
	<key>foldingStartMarker</key>
	<string>(\{\s*(//.*)?$|^\s*// \{\{\{)</string>
	<key>foldingStopMarker</key>
	<string>^\s*(\}|// \}\}\}$)</string>
	<key>keyEquivalent</key>
	<string>^~P</string>
	<key>name</key>
	<string>Processing</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.package.java.processing</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.package.java.processing</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.java.processing</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(package)\b(?:\s*([^ ;$]+)\s*(;)?)?</string>
			<key>name</key>
			<string>meta.package.java.processing</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.import.static.java.processing</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.import.java.processing</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.java.processing</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(import static)\b(?:\s*([^ ;$]+)\s*(;)?)?</string>
			<key>name</key>
			<string>meta.import.static.java.processing</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.import.java.processing</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.import.java.processing</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.java.processing</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(import)\b(?:\s*([^ ;$]+)\s*(;)?)?</string>
			<key>name</key>
			<string>meta.import.java.processing</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Different from Java: pde files can contain methods outside of an explicit class definition</string>
			<key>include</key>
			<string>#class-body</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>all-types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#primitive-arrays</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#primitive-types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#object-types</string>
				</dict>
			</array>
		</dict>
		<key>annotations</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(@[^ (]+)(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.annotation.java.processing</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.annotation-arguments.begin.java.processing</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.annotation-arguments.end.java.processing</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.declaration.annotation.java.processing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.other.key.java.processing</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.java.processing</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\w*)\s*(=)</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#code</string>
						</dict>
						<dict>
							<key>match</key>
							<string>,</string>
							<key>name</key>
							<string>punctuation.seperator.property.java.processing</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>@\w*</string>
					<key>name</key>
					<string>storage.type.annotation.java.processing</string>
				</dict>
			</array>
		</dict>
		<key>anonymous-classes-and-new</key>
		<dict>
			<key>begin</key>
			<string>\bnew\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.new.java.processing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=\)|\])(?!\s*{)|(?&lt;=})|(?=;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\w+)\s*(?=\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.java.processing</string>
						</dict>
					</dict>
					<key>end</key>
					<string>}|(?=\s*(?:;|\)))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\[</string>
							<key>end</key>
							<string>\]</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#code</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>{</string>
							<key>end</key>
							<string>(?=})</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#code</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=\w.*\()</string>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#object-types</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.java.processing</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#code</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>end</key>
					<string>}</string>
					<key>name</key>
					<string>meta.inner-class.java.processing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#class-body</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>assertions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(assert)\s</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.assert.java.processing</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.declaration.assertion.java.processing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>:</string>
							<key>name</key>
							<string>keyword.operator.assert.expression-seperator.java.processing</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#code</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>class</key>
		<dict>
			<key>begin</key>
			<string>(?=\w?[\w\s]*(?:class|(?:@)?interface|enum)\s+\w+)</string>
			<key>end</key>
			<string>}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.class.end.java.processing</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.java.processing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#storage-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.java.processing</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.class.java.processing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(class|(?:@)?interface|enum)\s+(\w+)</string>
					<key>name</key>
					<string>meta.class.identifier.java.processing</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>extends</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.extends.java.processing</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?={|implements)</string>
					<key>name</key>
					<string>meta.definition.class.inherited.classes.java.processing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#object-types-inherited</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(implements)\s</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.implements.java.processing</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\s*extends|\{)</string>
					<key>name</key>
					<string>meta.definition.class.implemented.interfaces.java.processing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#object-types-inherited</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>end</key>
					<string>(?=})</string>
					<key>name</key>
					<string>meta.class.body.java.processing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#class-body</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>class-body</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#enums</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#methods</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#annotations</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#code</string>
				</dict>
			</array>
		</dict>
		<key>code</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>end</key>
					<string>}</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#code</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#assertions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parens</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants-and-special-vars</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#anonymous-classes-and-new</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage-modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#all-types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#processing-specific</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.java.processing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>/\*\*/</string>
					<key>name</key>
					<string>comment.block.empty.java.processing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>text.html.javadoc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments-inline</string>
				</dict>
			</array>
		</dict>
		<key>comments-inline</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.java.processing</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.java.processing</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.line.double-slash.java.processing</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.java.processing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\s*((//).*$\n?)</string>
				</dict>
			</array>
		</dict>
		<key>constants-and-special-vars</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(true|false|null)\b</string>
					<key>name</key>
					<string>constant.language.java.processing</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(this|super)\b</string>
					<key>name</key>
					<string>variable.language.java.processing</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)([LlFfUuDd]|UL|ul)?\b</string>
					<key>name</key>
					<string>constant.numeric.java.processing</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.dereference.java.processing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\.)?\b([A-Z][A-Z0-9_]+)(?!&lt;|\.class|\s*\w+\s*=)\b</string>
					<key>name</key>
					<string>constant.other.java.processing</string>
				</dict>
			</array>
		</dict>
		<key>enums</key>
		<dict>
			<key>begin</key>
			<string>^(?=\s*[A-Z0-9_]+\s*({|\(|,))</string>
			<key>end</key>
			<string>(?=;|})</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\w+</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.other.enum.java.processing</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=,|;|})</string>
					<key>name</key>
					<string>meta.enum.java.processing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#parens</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>{</string>
							<key>end</key>
							<string>}</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#class-body</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(try|catch|finally|throw)\b</string>
					<key>name</key>
					<string>keyword.control.catch-exception.java.processing</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\?|:</string>
					<key>name</key>
					<string>keyword.control.java.processing</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(return|break|case|continue|default|do|while|for|switch|if|else)\b</string>
					<key>name</key>
					<string>keyword.control.java.processing</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(instanceof)\b</string>
					<key>name</key>
					<string>keyword.operator.java.processing</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(==|!=|&lt;=|&gt;=|&lt;&gt;|&lt;|&gt;)</string>
					<key>name</key>
					<string>keyword.operator.comparison.java.processing</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(=)</string>
					<key>name</key>
					<string>keyword.operator.assignment.java.processing</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\-\-|\+\+)</string>
					<key>name</key>
					<string>keyword.operator.increment-decrement.java.processing</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\-|\+|\*|\/|%)</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.java.processing</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(!|&amp;&amp;|\|\|)</string>
					<key>name</key>
					<string>keyword.operator.logical.java.processing</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=\S)\.(?=\S)</string>
					<key>name</key>
					<string>keyword.operator.dereference.java.processing</string>
				</dict>
				<dict>
					<key>match</key>
					<string>;</string>
					<key>name</key>
					<string>punctuation.terminator.java.processing</string>
				</dict>
			</array>
		</dict>
		<key>methods</key>
		<dict>
			<key>begin</key>
			<string>(?!new)(?=\w.*\s+)(?=[^=]+\()</string>
			<key>end</key>
			<string>}|(?=;)</string>
			<key>name</key>
			<string>meta.method.java.processing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#storage-modifiers</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\w+)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.java.processing</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.method.identifier.java.processing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#parameters</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=\w.*\s+\w+\s*\()</string>
					<key>end</key>
					<string>(?=\w+\s*\()</string>
					<key>name</key>
					<string>meta.method.return-type.java.processing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#all-types</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#throws</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>end</key>
					<string>(?=})</string>
					<key>name</key>
					<string>meta.method.body.java.processing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#code</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>object-types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b((?:[a-z]\w*\.)*[A-Z]+\w*)&lt;</string>
					<key>end</key>
					<string>&gt;|[^\w\s,\?&lt;\[\]]</string>
					<key>name</key>
					<string>storage.type.generic.java.processing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#object-types</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>&lt;</string>
							<key>comment</key>
							<string>This is just to support &lt;&gt;'s with no actual type prefix</string>
							<key>end</key>
							<string>&gt;|[^\w\s,\[\]&lt;]</string>
							<key>name</key>
							<string>storage.type.generic.java.processing</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b((?:[a-z]\w*\.)*[A-Z]+\w*)(?=\[)</string>
					<key>end</key>
					<string>(?=[^\]\s])</string>
					<key>name</key>
					<string>storage.type.object.array.java.processing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\[</string>
							<key>end</key>
							<string>\]</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#code</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.dereference.java.processing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(?:[a-z]\w*(\.))*[A-Z]+\w*\b</string>
					<key>name</key>
					<string>storage.type.java.processing</string>
				</dict>
			</array>
		</dict>
		<key>object-types-inherited</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b((?:[a-z]\w*\.)*[A-Z]+\w*)&lt;</string>
					<key>end</key>
					<string>&gt;|[^\w\s,&lt;]</string>
					<key>name</key>
					<string>entity.other.inherited-class.java.processing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#object-types</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>&lt;</string>
							<key>comment</key>
							<string>This is just to support &lt;&gt;'s with no actual type prefix</string>
							<key>end</key>
							<string>&gt;|[^\w\s,&lt;]</string>
							<key>name</key>
							<string>storage.type.generic.java.processing</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.dereference.java.processing</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(?:[a-z]\w*(\.))*[A-Z]+\w*</string>
					<key>name</key>
					<string>entity.other.inherited-class.java.processing</string>
				</dict>
			</array>
		</dict>
		<key>parameters</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>final</string>
					<key>name</key>
					<string>storage.modifier.java.processing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#primitive-arrays</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#primitive-types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#object-types</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\w+</string>
					<key>name</key>
					<string>variable.parameter.java.processing</string>
				</dict>
			</array>
		</dict>
		<key>parens</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#code</string>
				</dict>
			</array>
		</dict>
		<key>primitive-arrays</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?:void|boolean|byte|char|color|short|int|float|long|double)(\[\])*\b</string>
					<key>name</key>
					<string>storage.type.primitive.array.java.processing</string>
				</dict>
			</array>
		</dict>
		<key>primitive-types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?:void|boolean|byte|char|color|short|int|float|long|double)\b</string>
					<key>name</key>
					<string>storage.type.primitive.java.processing</string>
				</dict>
			</array>
		</dict>
		<key>processing-specific</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Note the look-ahead at the end. This distinguishes methods like frameRate() from the frameRate variable</string>
					<key>match</key>
					<string>\b(?&lt;!\.)(abs|acos|alpha|alpha|ambient|ambientLight|append|applyMatrix|arc|asin|atan2|atan|background|beginCamera|beginShape|bezier|bezierDetail|bezierPoint|bezierTangent|bezierVertex|binary|blend|blend|blue|boolean|box|brightness|byte|cache|camera|ceil|char|charAt|color|colorMode|concat|constrain|contract|copy|copy|cos|createFont|cursor|curve|curveDetail|curvePoint|curveSegments|curveTightness|curveVertex|day|degrees|delay|directionalLight|dist|duration|ellipse|ellipseMode|emissive|endCamera|endShape|equals|exp|expand|fill|filter|filter|float|floor|frameRate|frustum|get|get|green|hex|hint|hour|hue|image|imageMode|indexOf|int|join|keyPressed|keyReleased|length|lerp|lightFalloff|lightSpecular|lights|line|link|list|loadBytes|loadFont|loadImage|loadPixels|loadSound|loadStrings|log|lookat|loop|loop|mag|mask|max|millis|min|minute|modelX|modelY|modelZ|month|mouseDragged|mouseMoved|mousePressed|mouseReleased|nf|nfc|nfp|nfs|noCursor|noFill|noLoop|noLoop|noSmooth|noStroke|noTint|noise|noiseDetail|noiseSeed|normal|open|openStream|ortho|param|pause|perspective|play|point|pointLight|popMatrix|pow|print|printCamera|printMatrix|printProjection|println|pushMatrix|quad|radians|random|randomSeed|rect|rectMode|red|redraw|resetMatrix|reverse|rotate|rotateX|rotateY|rotateZ|round|saturation|save|saveBytes|saveFrame|saveStrings|scale|screenX|screenY|screenZ|second|set|set|shininess|shorten|sin|size|smooth|sort|specular|sphere|sphereDetail|splice|split|spotLight|sq|sqrt|status|stop|str|stroke|strokeCap|strokeJoin|strokeWeight|subset|substring|switch|tan|text|textAlign|textAscent|textDescent|textFont|textLeading|textMode|textSize|textWidth|texture|textureMode|time|tint|toLowerCase|toUpperCase|translate|triangle|trim|unHint|unbinary|unhex|updatePixels|vertex|volume|year|draw|setup)(?=\s*\()</string>
					<key>name</key>
					<string>support.function.java.processing</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(focused|frameCount|frameRate|height|height|key|keyCode|keyPressed|mouseButton|mousePressed|mouseX|mouseY|online|pixels|pmouseX|pmouseY|screen|width)(?!\s*\()\b</string>
					<key>name</key>
					<string>variable.other.java.processing</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(ADD|ALIGN_CENTER|ALIGN_LEFT|ALIGN_RIGHT|ALPHA|ALPHA_MASK|ALT|AMBIENT|ARGB|ARROW|BACKSPACE|BEVEL|BLEND|BLEND|BLUE_MASK|BLUR|CENTER|CENTER_RADIUS|CHATTER|CODED|COMPLAINT|COMPONENT|COMPOSITE|CONCAVE_POLYGON|CONTROL|CONVEX_POLYGON|CORNER|CORNERS|CROSS|CUSTOM|DARKEST|DEGREES|DEG_TO_RAD|DELETE|DIFFERENCE|DIFFUSE|DISABLED|DISABLE_TEXT_SMOOTH|DOWN|ENTER|EPSILON|ESC|GIF|GREEN_MASK|GREY|HALF|HALF_PI|HALF_PI|HAND|HARD_LIGHT|HSB|IMAGE|INVERT|JAVA2D|JPEG|LEFT|LIGHTEST|LINES|LINE_LOOP|LINE_STRIP|MAX_FLOAT|MITER|MODEL|MOVE|MULTIPLY|NORMALIZED|NO_DEPTH_TEST|NTSC|ONE|OPAQUE|OPENGL|ORTHOGRAPHIC|OVERLAY|P2D|P3D|PAL|PERSPECTIVE|PI|PI|PIXEL_CENTER|POINTS|POLYGON|POSTERIZE|PROBLEM|PROJECT|QUADS|QUAD_STRIP|QUARTER_PI|RADIANS|RAD_TO_DEG|RED_MASK|REPLACE|RETURN|RGB|RIGHT|ROUND|SCREEN|SECAM|SHIFT|SOFT_LIGHT|SPECULAR|SQUARE|SUBTRACT|SVIDEO|TAB|TARGA|TEXT|TFF|THIRD_PI|THRESHOLD|TIFF|TRIANGLES|TRIANGLE_FAN|TRIANGLE_STRIP|TUNER|TWO|TWO_PI|TWO_PI|UP|WAIT|WHITESPACE)\b</string>
					<key>name</key>
					<string>support.constant.java.processing</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Includes only Processing-supplied classes - not the standard Java classes (Array, String, etc.), though they're mentioned in the Processing reference</string>
					<key>match</key>
					<string>\b(P(Applet|Constants|Font|Graphics|Graphics2D|Graphics3D|GraphicsJava2D|Image|Line|Matrix|Matrix2D|Matrix3D|Polygon|Shape|ShapeSVG|SmoothTriangle|Style|Triangle|Vector)|StdXML(Builder|Parser|Reader)|XML(Element|EntityResolver|Exception|ParseException|ValidationException|Validator|Writer))\b</string>
					<key>name</key>
					<string>support.type.java.processing</string>
				</dict>
			</array>
		</dict>
		<key>storage-modifiers</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.java.processing</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(public|private|protected|static|final|native|synchronized|abstract|threadsafe|transient)\b</string>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.java.processing</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.java.processing</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.java.processing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>constant.character.escape.java.processing</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.java.processing</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.java.processing</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.java.processing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>constant.character.escape.java.processing</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>throws</key>
		<dict>
			<key>begin</key>
			<string>throws</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.java.processing</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?={|;)</string>
			<key>name</key>
			<string>meta.throwables.java.processing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#object-types</string>
				</dict>
			</array>
		</dict>
		<key>values</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#object-types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants-and-special-vars</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.java.processing</string>
	<key>uuid</key>
	<string>EF0D256C-2FCB-4A87-9250-0F5F82A366B9</string>
</dict>
</plist>
